# bspwm hotkeys
#
# Cleanly quit bspwm
# super + shift + q
#  bspc quit 1 && killall polybar

# Show keybindings
# super + F1
  # termite -e keybindings.sh
#
# Window manipulation
# ______________

# Close window
super + q
  bspc  node -c

# Kill window
super + shift + q
  bspc  node -k

# Toggle tiling mode of window
super + z
  {bspc node -t floating && window-placer $(bspc query -T -d | grep -o '"state":"floating"' | wc -l),bspc node -t tiled}

super + shift + z
  bspc node -t {pseudo_tiled,tiled}

# Force all windows of the desktop to tile
super + x
  bspcp tile
# Force all windows of the desktop to float and arrange them
super + shift + x
  bspcp float

# Toggle fullscreen
super + F8
  bspc node -t {fullscreen,tiled}


###########################WIP
# Try to keep size and position of the selected window
# super + o
  # bspc node -g private

# Make window sticky
# super + i
  # bspc node -g sticky

# Lock a window from closing
super + Escape
  ~/.config/polybar/scripts/powermenu
  # bspc node -g locked
###########################WIP


### Map or unmap windows (functional equivalent of "minimize")
super + c
    whid dmenu

super + shift + c
    whid hide

super + ctrl + c
    whid last

#
# Window moving and splitting
# ______________

# go (Shift=move) to desktop (and focus the monitor that the desktop is located on. Bspwm style)
super + {_,shift + }{1-9,0}
    bspc {desktop -f,node -d} ^{1-9,10}

# Select previous / next desktop
super + {m,n}
  bspc desktop -f {prev.occupied,next.occupied}

# cycle windows
alt + {_,shift + }Tab
    bspc node -f {next,prev}

# Go to specific window
super + Tab
  WindowSelector

super +  {h,j,k,l}
   focusmover {west,south,north,east}

super +  {Left,Down,Up,Right}
    focusmover {west,south,north,east}

super + shift + {h,j,k,l}
  windowgrabber {west,south,north,east}
# Autopresel (split window in its largest dimension)
# ctrl + space
  # auto-presel

# alt + ctrl + {h,j,k,l}
  # bspc node -p \~{west,south,north,east}

# alt + ctrl + {Left,Down,Up,Right}
  # bspc node -p \~{west,south,north,east}

# alt + ctrl + {1-9}
  # bspc node -o 0.{1-9}

# Move current window to largest space or preselected area if there is one.
# super + Return
    # windowpromoter

# Create a new "master area", splitting the whole desktop instead of just windows.
# alt + Return
  # bspc node -n @/


## Alternative: i3 style behavior (focus nth, desktop of the focused monitor)
#super + {1-9,0}
#	focusdesktopofthismonitor {1-9}
#super + shift + {1-9,0}
#	movetodesktopofthismonitor {1-9,10}


# Different style of movement: transplant into window in chosen direction
# super + shift + {Left,Down,Up,Right}
  # euclid_mover {west,south,north,east}

#resize windows
# super + ctrl + {a,s,w,d}
  # bspwm_resize.sh {west,south,north,east}

super + ctrl + {h,j,k,l}
  bspwm_resize.sh {west,south,north,east}

super + ctrl + {Left,Down,Up,Right}
  bspwm_resize.sh {west,south,north,east}

#
# Layout manipulation/desktop level controls
# ______________

# Toggle monocle mode
# super + f
  # bspc desktop -l next

# Balance tree
super + b
  bspc node @/ -B

# Balance brother node. If you do this on biggest window of the desktop, it usually means balancing all windows with except the biggest.
super + shift + b
  bspc node @brother -B

# Undo balancing (equalize windows)
super + ctrl + b
  bspc node @/ -E

# Toggle automatic balancing of windows
alt + b
  euclid_balancer

# Mirror and flip leaves of tree
super + {comma,period}
  bspc node @/ -F {horizontal,vertical}

# Rotate leaves of tree
super + shift + {comma,period}
  bspc node @/ -R {90,270}

# Change window gap

# super + g
  # bspc config -d focused window_gap {$gap,$(($gap+$gap)),$(($gap+$gap+$gap))}

# super + button{4,5}
  # bspc config -d focused window_gap $((`bspc config -d focused window_gap` {+,-} 2 ))
#
# mouse bindings
# __________________

~button1
  DidIClickDesktop.sh && gapgrab

~button2
  DidIClickDesktop.sh && mygtkmenui -- .config/GTKmenu/BspwmDesktopMenui
#DidIClickDesktop.sh && mygtkmenui -- .config/GTKmenu/BspwmWindowMenui

~button3
  DidIClickDesktop.sh && mygtkmenui -- .config/GTKmenu/LaunchMenu


##############################
# spawn programs
##############################

# run applications
# super + space
  # dmenu_recent -fn 'xos4 Terminus:size=15' -i -l 14 -w 600 -y $PANEL_HEIGHT

# Triggered by jus tapping super
super + g
  rofi -show

#super + p
#	dmenu_recent -h $PANEL_HEIGHT -fn 'xos4 Terminus:size=15' -i

super + Return
      kitty

super + F10
  rofi-finder.sh

super + F9
  /usr/bin/firefox

super + F12
  nemo

super + F11
   emacs

#
# Media keys
#

XF86AudioRaiseVolume
#_____________________
  volume up

XF86AudioLowerVolume
  volume down

XF86AudioMute
  volume mute

XF86MonBrightnessDown
 light -U 5

XF86MonBrightnessUp
 light -A 5

XF86Sleep
  systemctl suspend

# make sxhkd reload its configuration files:
super + shift + Escape
  pkill -USR1 -x sxhkd

# In case bspwmrc fails to execute/you wish have plugged in a new monitor
super + shift + r
  ~/.config/bspwm/bspwmrc
#edit this file
# alt + ctrl + space
  # $GUI_EDITOR ~/.config/sxhkd/sxhkdrc
# Toggle compositing
super + ctrl + space
  {pkill compton ,\
  compton -b }

# Remove receptacles
super + BackSpace
  for i in $(bspc query -N -n .leaf.!window.local); do bspc node $i -k; done
